workload: Interactive / complex
number: 10
title: Friend recommendation
description: |
  Given a start Person, find that Person's friends of friends
  (excluding start Person, and immediate friends), who were born on
  or after the 21st of a given month (in any year) and before the
  22nd of the following month. Calculate the similarity between each
  of these Persons and start Person, where similarity for any Person
  is defined as follows:

  * common = number of Posts created by that Person, such that the Post has a Tag that start Person is Interested in
  * uncommon = number of Posts created by that Person, such that the Post has no Tag that start Person is Interested in
  * similarity = common - uncommon
parameters:
  - name: Person.id
    type: ID
  - name: month
    type: 32-bit Integer
    description: between 1-12
result:
  - name: Person.id
    type: ID
  - name: Person.firstName
    type: String
  - name: Person.lastName
    type: String
  - name: similarity
    type: 32-bit Integer
    category: calculated
  - name: Person.gender
    type: String
  - name: Person-isLocatedIn->Place.name
    type: String
sort:
  - name: similarity
    direction: desc
  - name: Person.id
    direction: asc
limit: 10
#wiki
wiki_choke_points: [2.6, 2.7, 4.2, 5, 6.3, 7.1]
#doc
choke_points: [2.3, 3.3, 4.1, 4.2, 5.1, 5.2, 6.1, 7.1]
relevance: |
  This query looks for paths of length two, starting from a Person and ending at the friends of their friends. It does
  widely scattered graph traversal, and one expects no locality of in friends of friends, as these have been acquired
  over a long time and have widely scattered identifiers. The join order is simple but one must see that the anti-join
  for "not in my friends" is better with hash. Also the last pattern in the scalar sub-queries joining or anti-joining the
  tags of the candidateâ€™s posts to interests of self should be by hash.
